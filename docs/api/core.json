{
	"id": 0,
	"name": "Reference - BaklavaJS",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 197,
			"name": "TemporaryConnectionState",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 199,
					"name": "ALLOWED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 5,
							"character": 11
						}
					]
				},
				{
					"id": 200,
					"name": "FORBIDDEN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 198,
					"name": "NONE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 4,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						199,
						200,
						198
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/connection.ts",
					"line": 3,
					"character": 36
				}
			]
		},
		{
			"id": 251,
			"name": "Connection",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 259,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 260,
							"name": "new Connection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 261,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								},
								{
									"id": 262,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 251,
								"name": "Connection"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 16,
							"character": 6
						}
					]
				},
				{
					"id": 256,
					"name": "destructed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 12,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"implementationOf": {
						"type": "reference",
						"id": 213,
						"name": "ITransferConnection.destructed"
					}
				},
				{
					"id": 253,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 9,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 217,
						"name": "NodeInterface"
					},
					"implementationOf": {
						"type": "reference",
						"id": 215,
						"name": "ITransferConnection.from"
					}
				},
				{
					"id": 252,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 8,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"id": 214,
						"name": "ITransferConnection.id"
					}
				},
				{
					"id": 255,
					"name": "isInDanger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 11,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"implementationOf": {
						"type": "reference",
						"id": 212,
						"name": "ITransferConnection.isInDanger"
					}
				},
				{
					"id": 254,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 10,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 217,
						"name": "NodeInterface"
					},
					"implementationOf": {
						"type": "reference",
						"id": 216,
						"name": "ITransferConnection.to"
					}
				},
				{
					"id": 263,
					"name": "destruct",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 264,
							"name": "destruct",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 33,
							"character": 19
						}
					]
				},
				{
					"id": 257,
					"name": "events",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 258,
							"name": "destruct",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/connection.ts",
									"line": 15,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<void>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								258
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 14,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						259
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						256,
						253,
						252,
						255,
						254
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						263
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						257
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/connection.ts",
					"line": 6,
					"character": 23
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 211,
					"name": "ITransferConnection"
				}
			]
		},
		{
			"id": 265,
			"name": "DummyConnection",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "This class is used for calculation purposes only.\nIt won't alter any state of the connected nodes"
			},
			"children": [
				{
					"id": 269,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 270,
							"name": "new DummyConnection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 271,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								},
								{
									"id": 272,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 265,
								"name": "DummyConnection"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 50,
							"character": 29
						}
					]
				},
				{
					"id": 267,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 49,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 217,
						"name": "NodeInterface"
					},
					"implementationOf": {
						"type": "reference",
						"id": 209,
						"name": "IConnection.from"
					}
				},
				{
					"id": 266,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 48,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"id": 208,
						"name": "IConnection.id"
					}
				},
				{
					"id": 268,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/connection.ts",
							"line": 50,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 217,
						"name": "NodeInterface"
					},
					"implementationOf": {
						"type": "reference",
						"id": 210,
						"name": "IConnection.to"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						269
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						267,
						266,
						268
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/connection.ts",
					"line": 46,
					"character": 28
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 207,
					"name": "IConnection"
				}
			]
		},
		{
			"id": 370,
			"name": "Editor",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The main model class for BaklavaJS"
			},
			"children": [
				{
					"id": 395,
					"name": "connections",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "List of all connections"
					},
					"getSignature": [
						{
							"id": 396,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "List of all connections"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 251,
										"name": "Connection"
									}
								],
								"name": "ReadonlyArray"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 45,
							"character": 26
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 51,
						"name": "IEditor.connections"
					}
				},
				{
					"id": 399,
					"name": "nodeCategories",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Mapping of nodes to node categories"
					},
					"getSignature": [
						{
							"id": 400,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Mapping of nodes to node categories"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "ReadonlyMap"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 55,
							"character": 29
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 53,
						"name": "IEditor.nodeCategories"
					}
				},
				{
					"id": 397,
					"name": "nodeTypes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "List of all registered node types"
					},
					"getSignature": [
						{
							"id": 398,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "List of all registered node types"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 91,
										"name": "NodeConstructor"
									}
								],
								"name": "ReadonlyMap"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 50,
							"character": 24
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 52,
						"name": "IEditor.nodeTypes"
					}
				},
				{
					"id": 393,
					"name": "nodes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "List of all nodes"
					},
					"getSignature": [
						{
							"id": 394,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "List of all nodes"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 296,
										"name": "Node"
									}
								],
								"name": "ReadonlyArray"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 40,
							"character": 20
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 50,
						"name": "IEditor.nodes"
					}
				},
				{
					"id": 401,
					"name": "plugins",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "List of all plugins in this editor"
					},
					"getSignature": [
						{
							"id": 402,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "List of all plugins in this editor"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 25,
										"name": "IPlugin"
									}
								],
								"name": "ReadonlySet"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 60,
							"character": 22
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 54,
						"name": "IEditor.plugins"
					}
				},
				{
					"id": 414,
					"name": "addConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 415,
							"name": "addConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Add a connection to the list of connections.",
								"returns": "The created connection. If no connection could be created, returns `undefined`.\n"
							},
							"parameters": [
								{
									"id": 416,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Start interface for the connection"
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								},
								{
									"id": 417,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Target interface for the connection"
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 251,
										"name": "Connection"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 115,
							"character": 24
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 66,
						"name": "IEditor.addConnection"
					}
				},
				{
					"id": 408,
					"name": "addNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 409,
							"name": "addNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Add a node to the list of nodes.",
								"returns": "Instance of the node or undefined if the node was not added\n"
							},
							"parameters": [
								{
									"id": 410,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Instance of a node"
									},
									"type": {
										"type": "reference",
										"id": 296,
										"name": "Node"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 296,
										"name": "Node"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 85,
							"character": 18
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 60,
						"name": "IEditor.addNode"
					}
				},
				{
					"id": 421,
					"name": "checkConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 422,
							"name": "checkConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Checks, whether a connection between two node interfaces would be valid.",
								"returns": "Whether the connection is allowed or not.\n"
							},
							"parameters": [
								{
									"id": 423,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The starting node interface (must be an output interface)"
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								},
								{
									"id": 424,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The target node interface (must be an input interface)"
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "reference",
										"id": 265,
										"name": "DummyConnection"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 152,
							"character": 26
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 73,
						"name": "IEditor.checkConnection"
					}
				},
				{
					"id": 436,
					"name": "findNodeInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 437,
							"name": "findNodeInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 438,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 89,
								"name": "IEditor.findNodeInterface"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 268,
							"character": 28
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 88,
						"name": "IEditor.findNodeInterface"
					}
				},
				{
					"id": 433,
					"name": "generateId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 434,
							"name": "generateId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 435,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 264,
							"character": 21
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 85,
						"name": "IEditor.generateId"
					}
				},
				{
					"id": 425,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 426,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Load a state"
							},
							"parameters": [
								{
									"id": 427,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "State to load\n"
									},
									"type": {
										"type": "reference",
										"id": 4,
										"name": "IState"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 78,
								"name": "IEditor.load"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 188,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 77,
						"name": "IEditor.load"
					}
				},
				{
					"id": 403,
					"name": "registerNodeType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 404,
							"name": "registerNodeType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Register a new node type"
							},
							"parameters": [
								{
									"id": 405,
									"name": "typeName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the node (must be equal to the node's `type` field)"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 406,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Actual type / constructor of the node"
									},
									"type": {
										"type": "reference",
										"id": 91,
										"name": "NodeConstructor"
									}
								},
								{
									"id": 407,
									"name": "category",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Category of the node. Will be used in the view's context menu for adding nodes\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"default\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 70,
							"character": 27
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 55,
						"name": "IEditor.registerNodeType"
					}
				},
				{
					"id": 418,
					"name": "removeConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 419,
							"name": "removeConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Remove a connection from the list of connections."
							},
							"parameters": [
								{
									"id": 420,
									"name": "connection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Connection instance that should be removed.\n"
									},
									"type": {
										"type": "reference",
										"id": 251,
										"name": "Connection"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 137,
							"character": 27
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 70,
						"name": "IEditor.removeConnection"
					}
				},
				{
					"id": 411,
					"name": "removeNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 412,
							"name": "removeNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes a node from the list.\nWill also remove all connections from and to the node."
							},
							"parameters": [
								{
									"id": 413,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Reference to a node in the list.\n"
									},
									"type": {
										"type": "reference",
										"id": 296,
										"name": "Node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 98,
							"character": 21
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 63,
						"name": "IEditor.removeNode"
					}
				},
				{
					"id": 428,
					"name": "save",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 429,
							"name": "save",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Save a state",
								"returns": "Current state\n"
							},
							"type": {
								"type": "reference",
								"id": 4,
								"name": "IState"
							},
							"implementationOf": {
								"type": "reference",
								"id": 81,
								"name": "IEditor.save"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 239,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 80,
						"name": "IEditor.save"
					}
				},
				{
					"id": 430,
					"name": "use",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 431,
							"name": "use",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Register a plugin",
								"returns": "Whether the plugin was successfully registered\n"
							},
							"parameters": [
								{
									"id": 432,
									"name": "plugin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Plugin to register"
									},
									"type": {
										"type": "reference",
										"id": 25,
										"name": "IPlugin"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 83,
								"name": "IEditor.use"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 256,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 82,
						"name": "IEditor.use"
					}
				},
				{
					"id": 376,
					"name": "events",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 384,
							"name": "addConnection",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 26,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 207,
										"name": "IConnection"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<IConnection>()"
						},
						{
							"id": 380,
							"name": "addNode",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 22,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 128,
										"name": "INode"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<INode>()"
						},
						{
							"id": 383,
							"name": "beforeAddConnection",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 25,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 104,
										"name": "IAddConnectionEventData"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<IAddConnectionEventData>()"
						},
						{
							"id": 379,
							"name": "beforeAddNode",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 21,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 128,
										"name": "INode"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<INode>()"
						},
						{
							"id": 377,
							"name": "beforeRegisterNodeType",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 19,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 107,
										"name": "IAddNodeTypeEventData"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<IAddNodeTypeEventData>()"
						},
						{
							"id": 386,
							"name": "beforeRemoveConnection",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 28,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 207,
										"name": "IConnection"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<IConnection>()"
						},
						{
							"id": 381,
							"name": "beforeRemoveNode",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 23,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 128,
										"name": "INode"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<INode>()"
						},
						{
							"id": 388,
							"name": "beforeUsePlugin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 30,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 25,
										"name": "IPlugin"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<IPlugin>()"
						},
						{
							"id": 385,
							"name": "checkConnection",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 27,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 104,
										"name": "IAddConnectionEventData"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<IAddConnectionEventData>()"
						},
						{
							"id": 378,
							"name": "registerNodeType",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 20,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 107,
										"name": "IAddNodeTypeEventData"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<IAddNodeTypeEventData>()"
						},
						{
							"id": 387,
							"name": "removeConnection",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 29,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 207,
										"name": "IConnection"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<IConnection>()"
						},
						{
							"id": 382,
							"name": "removeNode",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 24,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 128,
										"name": "INode"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<INode>()"
						},
						{
							"id": 389,
							"name": "usePlugin",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 31,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 25,
										"name": "IPlugin"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<IPlugin>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								384,
								380,
								383,
								379,
								377,
								386,
								381,
								388,
								385,
								378,
								387,
								382,
								389
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 18,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"implementationOf": {
						"type": "reference",
						"id": 31,
						"name": "IEditor.events"
					}
				},
				{
					"id": 390,
					"name": "hooks",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 392,
							"name": "load",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 36,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4,
										"name": "IState"
									}
								],
								"name": "SequentialHook"
							},
							"defaultValue": "new SequentialHook<IState>()"
						},
						{
							"id": 391,
							"name": "save",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/editor.ts",
									"line": 35,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4,
										"name": "IState"
									}
								],
								"name": "SequentialHook"
							},
							"defaultValue": "new SequentialHook<IState>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								392,
								391
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/editor.ts",
							"line": 34,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"implementationOf": {
						"type": "reference",
						"id": 46,
						"name": "IEditor.hooks"
					}
				}
			],
			"groups": [
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						395,
						399,
						397,
						393,
						401
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						414,
						408,
						421,
						436,
						433,
						425,
						403,
						418,
						411,
						428,
						430
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						376,
						390
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/editor.ts",
					"line": 10,
					"character": 19
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 30,
					"name": "IEditor"
				}
			]
		},
		{
			"id": 296,
			"name": "Node",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isAbstract": true
			},
			"comment": {
				"shortText": "Abstract base class for every node"
			},
			"children": [
				{
					"id": 299,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Unique identifier of the node"
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 25,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"node_\" + generateId()",
					"implementationOf": {
						"type": "reference",
						"id": 131,
						"name": "INode.id"
					}
				},
				{
					"id": 300,
					"name": "interfaces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A map of all interfaces of the node.\n| Key = Name of the interface\n| Value = NodeInterface instance"
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 30,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 217,
								"name": "NodeInterface"
							}
						],
						"name": "Map"
					},
					"defaultValue": "new Map()",
					"implementationOf": {
						"type": "reference",
						"id": 132,
						"name": "INode.interfaces"
					}
				},
				{
					"id": 298,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Customizable display name of the node."
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 23,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"id": 130,
						"name": "INode.name"
					}
				},
				{
					"id": 301,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A map of all options of the node.\n| Key = Name of the option\n| Value = NodeOption instance"
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 35,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 273,
								"name": "NodeOption"
							}
						],
						"name": "Map"
					},
					"defaultValue": "new Map()",
					"implementationOf": {
						"type": "reference",
						"id": 133,
						"name": "INode.options"
					}
				},
				{
					"id": 302,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Use this property to save additional state of the node"
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 38,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					},
					"implementationOf": {
						"type": "reference",
						"id": 134,
						"name": "INode.state"
					}
				},
				{
					"id": 297,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Type of the node"
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 21,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"id": 129,
						"name": "INode.type"
					}
				},
				{
					"id": 317,
					"name": "inputInterfaces",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "All input interfaces of the node"
					},
					"getSignature": [
						{
							"id": 318,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All input interfaces of the node"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								],
								"name": "Record"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 60,
							"character": 30
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 150,
						"name": "INode.inputInterfaces"
					}
				},
				{
					"id": 319,
					"name": "outputInterfaces",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "All output interfaces of the node"
					},
					"getSignature": [
						{
							"id": 320,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All output interfaces of the node"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								],
								"name": "Record"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 69,
							"character": 31
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 151,
						"name": "INode.outputInterfaces"
					}
				},
				{
					"id": 329,
					"name": "addInputInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 330,
							"name": "addInputInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Add an input interface to the node",
								"returns": "The created interface or undefined, if the interface was not created\n"
							},
							"parameters": [
								{
									"id": 331,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the interface"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 332,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Optional name of a NodeOption which is displayed when the interface is not connected"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 333,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Optional default value for the interface/option"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "null"
								},
								{
									"id": 334,
									"name": "additionalProperties",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Additional properties of the interface that can be used by plugins"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 125,
							"character": 31
						}
					]
				},
				{
					"id": 342,
					"name": "addOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 343,
							"name": "addOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Add a node option to the node",
								"returns": "The created option or undefined, if the option was not created\n"
							},
							"parameters": [
								{
									"id": 344,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the option"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 345,
									"name": "component",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the option component"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 346,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Default value for the option"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "null"
								},
								{
									"id": 347,
									"name": "sidebarComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Optional name of the component to display in the sidebar"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 348,
									"name": "additionalProperties",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Additional properties of the option that can be used by plugins"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 273,
										"name": "NodeOption"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 189,
							"character": 23
						}
					]
				},
				{
					"id": 335,
					"name": "addOutputInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 336,
							"name": "addOutputInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Add an output interface to the node",
								"returns": "The created interface or undefined, if the interface was not created\n"
							},
							"parameters": [
								{
									"id": 337,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the interface"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 338,
									"name": "additionalProperties",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Additional properties of the interface that can be used by plugins"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 141,
							"character": 32
						}
					]
				},
				{
					"id": 326,
					"name": "calculate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 327,
							"name": "calculate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The default implementation does nothing.\nOverwrite this method to do calculation.",
								"returns": "This method can return a promise.\nAdditionally, when using the engine plugin and this node is a rootNode,\nthe data is returned from the engines calculate function or the calculated event.\n"
							},
							"parameters": [
								{
									"id": 328,
									"name": "calculationData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"id": 158,
								"name": "INode.calculate"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 113,
							"character": 20
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 157,
						"name": "INode.calculate"
					}
				},
				{
					"id": 352,
					"name": "getInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 353,
							"name": "getInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get an interface by its name. If the node does not have an interface with\n`name`, this method will throw an error."
							},
							"parameters": [
								{
									"id": 354,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the requested interface\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 217,
								"name": "NodeInterface"
							},
							"implementationOf": {
								"type": "reference",
								"id": 161,
								"name": "INode.getInterface"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 218,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 160,
						"name": "INode.getInterface"
					}
				},
				{
					"id": 355,
					"name": "getOptionValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 356,
							"name": "getOptionValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get the value of option `name`"
							},
							"parameters": [
								{
									"id": 357,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the option\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"id": 164,
								"name": "INode.getOptionValue"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 229,
							"character": 25
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 163,
						"name": "INode.getOptionValue"
					}
				},
				{
					"id": 321,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 322,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 323,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 8,
										"name": "INodeState"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 153,
								"name": "INode.load"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 77,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 152,
						"name": "INode.load"
					}
				},
				{
					"id": 362,
					"name": "registerEditor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 363,
							"name": "registerEditor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This function will automatically be called as soon as the node is added to an editor."
							},
							"parameters": [
								{
									"id": 364,
									"name": "editor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Editor instance\n"
									},
									"type": {
										"type": "reference",
										"id": 370,
										"name": "Editor"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 252,
							"character": 25
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 170,
						"name": "INode.registerEditor"
					}
				},
				{
					"id": 339,
					"name": "removeInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 340,
							"name": "removeInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Remove an existing interface"
							},
							"parameters": [
								{
									"id": 341,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the interface.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 153,
							"character": 29
						}
					]
				},
				{
					"id": 349,
					"name": "removeOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 350,
							"name": "removeOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Remove an existing option"
							},
							"parameters": [
								{
									"id": 351,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the option\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 204,
							"character": 26
						}
					]
				},
				{
					"id": 324,
					"name": "save",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 325,
							"name": "save",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 8,
								"name": "INodeState"
							},
							"implementationOf": {
								"type": "reference",
								"id": 156,
								"name": "INode.save"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 94,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 155,
						"name": "INode.save"
					}
				},
				{
					"id": 358,
					"name": "setOptionValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 359,
							"name": "setOptionValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Set the value of option `name`"
							},
							"parameters": [
								{
									"id": 360,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the option"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 361,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "New value\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 167,
								"name": "INode.setOptionValue"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 241,
							"character": 25
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 166,
						"name": "INode.setOptionValue"
					}
				},
				{
					"id": 303,
					"name": "events",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 305,
							"name": "addInterface",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 42,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<NodeInterface>()"
						},
						{
							"id": 309,
							"name": "addOption",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 121,
										"name": "IOptionEventData"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<IOptionEventData>()"
						},
						{
							"id": 304,
							"name": "beforeAddInterface",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 41,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 111,
										"name": "IAddInterfaceEventData"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<IAddInterfaceEventData>()"
						},
						{
							"id": 308,
							"name": "beforeAddOption",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 45,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 116,
										"name": "IAddOptionEventData"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<IAddOptionEventData>()"
						},
						{
							"id": 306,
							"name": "beforeRemoveInterface",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 43,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<NodeInterface>()"
						},
						{
							"id": 310,
							"name": "beforeRemoveOption",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 47,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 121,
										"name": "IOptionEventData"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<IOptionEventData>()"
						},
						{
							"id": 307,
							"name": "removeInterface",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 44,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 217,
										"name": "NodeInterface"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<NodeInterface>()"
						},
						{
							"id": 311,
							"name": "removeOption",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 48,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 121,
										"name": "IOptionEventData"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<IOptionEventData>()"
						},
						{
							"id": 312,
							"name": "update",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 49,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 124,
										"name": "INodeUpdateEventData"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<INodeUpdateEventData>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								305,
								309,
								304,
								308,
								306,
								310,
								307,
								311,
								312
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 40,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"implementationOf": {
						"type": "reference",
						"id": 135,
						"name": "INode.events"
					}
				},
				{
					"id": 313,
					"name": "hooks",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 314,
							"name": "load",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 53,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 8,
										"name": "INodeState"
									}
								],
								"name": "SequentialHook"
							},
							"defaultValue": "new SequentialHook<INodeState>()"
						},
						{
							"id": 315,
							"name": "save",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/node.ts",
									"line": 54,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 8,
										"name": "INodeState"
									}
								],
								"name": "SequentialHook"
							},
							"defaultValue": "new SequentialHook<INodeState>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								314,
								315
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 52,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"implementationOf": {
						"type": "reference",
						"id": 146,
						"name": "INode.hooks"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						299,
						300,
						298,
						301,
						302,
						297
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						317,
						319
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						329,
						342,
						335,
						326,
						352,
						355,
						321,
						362,
						339,
						349,
						324,
						358
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						303,
						313
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/node.ts",
					"line": 18,
					"character": 26
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 128,
					"name": "INode"
				}
			]
		},
		{
			"id": 450,
			"name": "NodeBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Utility class for creating custom nodes"
			},
			"children": [
				{
					"id": 457,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Create a new NodeBuilder instance"
					},
					"signatures": [
						{
							"id": 458,
							"name": "new NodeBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Create a new NodeBuilder instance"
							},
							"parameters": [
								{
									"id": 459,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Type of the node to create"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 460,
									"name": "additionalProperties",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Additional properties that can be used by plugins\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 450,
								"name": "NodeBuilder"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 72,
							"character": 47
						}
					]
				},
				{
					"id": 466,
					"name": "addInputInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 467,
							"name": "addInputInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Add an input interface to the node",
								"returns": "Current node builder instance for chaining\n"
							},
							"parameters": [
								{
									"id": 468,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the interface"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 469,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "A node option component to be displayed when the interface is not connected"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 470,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "\nDefault value for the interface.\nIf the default value is a primitive (e. g. string, number) then the value can be passed directly.\nFor objects provide a function that returns the default value."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "null"
								},
								{
									"id": 471,
									"name": "additionalProperties",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Additional properties of the interface that can be used by plugins"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 450,
								"name": "NodeBuilder"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 116,
							"character": 28
						}
					]
				},
				{
					"id": 476,
					"name": "addOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 477,
							"name": "addOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Add a node option to the node",
								"returns": "Current node builder instance for chaining\n"
							},
							"parameters": [
								{
									"id": 478,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the option"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 479,
									"name": "optionComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 480,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "\nDefault value for the option.\nIf the default value is a primitive (e. g. string, number) then the value can be passed directly.\nFor objects provide a function that returns the default value."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "null"
								},
								{
									"id": 481,
									"name": "sidebarComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Optional component to display in the sidebar"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 482,
									"name": "additionalProperties",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Additional properties of the option that can be used by plugins"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 450,
								"name": "NodeBuilder"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 146,
							"character": 20
						}
					]
				},
				{
					"id": 472,
					"name": "addOutputInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 473,
							"name": "addOutputInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Add an output interface to the node",
								"returns": "Current node builder instance for chaining\n"
							},
							"parameters": [
								{
									"id": 474,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Name of the interface"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 475,
									"name": "additionalProperties",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Additional properties of the interface that can be used by plugins"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 450,
								"name": "NodeBuilder"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 129,
							"character": 29
						}
					]
				},
				{
					"id": 461,
					"name": "build",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 462,
							"name": "build",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Build the node class.\nThis must be called as the last operation when building a node.",
								"returns": "The generated node class\n"
							},
							"type": {
								"type": "reference",
								"id": 495,
								"name": "NodeConstructorImpl"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 90,
							"character": 16
						}
					]
				},
				{
					"id": 483,
					"name": "onCalculate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 484,
							"name": "onCalculate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Register a callback for the calculation function.\nThe callback will receive the node instance as first parameter.\n(If you do not use ES6 arrow functions, the node instance\nwill also be bound to `this`)",
								"returns": "Current node builder instance for chaining\n"
							},
							"parameters": [
								{
									"id": 485,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "Callback to be executed when `calculate()` is called on the node"
									},
									"type": {
										"type": "reference",
										"id": 489,
										"name": "CalculationFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 450,
								"name": "NodeBuilder"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 166,
							"character": 22
						}
					]
				},
				{
					"id": 463,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 464,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Set a display name for the node.",
								"returns": "Current node builder instance for chaining\n"
							},
							"parameters": [
								{
									"id": 465,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "New name of the node"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 450,
								"name": "NodeBuilder"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 99,
							"character": 18
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						457
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						466,
						476,
						472,
						461,
						483,
						463
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
					"line": 65,
					"character": 24
				}
			]
		},
		{
			"id": 217,
			"name": "NodeInterface",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 222,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 223,
							"name": "k",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"children": [
				{
					"id": 242,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 243,
							"name": "new NodeInterface",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 244,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 128,
										"name": "INode"
									}
								},
								{
									"id": 245,
									"name": "isInput",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 217,
								"name": "NodeInterface"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 45,
							"character": 5
						}
					]
				},
				{
					"id": 218,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 7,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"id": 176,
						"name": "INodeInterface.id"
					}
				},
				{
					"id": 219,
					"name": "isInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"id": 177,
						"name": "INodeInterface.isInput"
					}
				},
				{
					"id": 221,
					"name": "option",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 10,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"id": 179,
						"name": "INodeInterface.option"
					}
				},
				{
					"id": 220,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 9,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 128,
						"name": "INode"
					},
					"implementationOf": {
						"type": "reference",
						"id": 178,
						"name": "INodeInterface.parent"
					}
				},
				{
					"id": 233,
					"name": "connectionCount",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"getSignature": [
						{
							"id": 236,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"setSignature": [
						{
							"id": 234,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 235,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 27,
							"character": 30
						},
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 31,
							"character": 30
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 190,
						"name": "INodeInterface.connectionCount"
					}
				},
				{
					"id": 238,
					"name": "value",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"getSignature": [
						{
							"id": 241,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"setSignature": [
						{
							"id": 239,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 240,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 36,
							"character": 20
						},
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 43,
							"character": 20
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 191,
						"name": "INodeInterface.value"
					}
				},
				{
					"id": 246,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 247,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 248,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IInterfaceState"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 193,
								"name": "INodeInterface.load"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 53,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 192,
						"name": "INodeInterface.load"
					}
				},
				{
					"id": 249,
					"name": "save",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 250,
							"name": "save",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 16,
								"name": "IInterfaceState"
							},
							"implementationOf": {
								"type": "reference",
								"id": 196,
								"name": "INodeInterface.save"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 59,
							"character": 15
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 195,
						"name": "INodeInterface.save"
					}
				},
				{
					"id": 224,
					"name": "events",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 226,
							"name": "beforeSetValue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
									"line": 16,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<any>()"
						},
						{
							"id": 225,
							"name": "setConnectionCount",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
									"line": 15,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<number>()"
						},
						{
							"id": 227,
							"name": "setValue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
									"line": 17,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<any>()"
						},
						{
							"id": 228,
							"name": "updated",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
									"line": 18,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<void>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								226,
								225,
								227,
								228
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 14,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"implementationOf": {
						"type": "reference",
						"id": 180,
						"name": "INodeInterface.events"
					}
				},
				{
					"id": 229,
					"name": "hooks",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 230,
							"name": "load",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 16,
										"name": "IInterfaceState"
									}
								],
								"name": "SequentialHook"
							},
							"defaultValue": "new SequentialHook<IInterfaceState>()"
						},
						{
							"id": 231,
							"name": "save",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 16,
										"name": "IInterfaceState"
									}
								],
								"name": "SequentialHook"
							},
							"defaultValue": "new SequentialHook<IInterfaceState>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								230,
								231
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
							"line": 21,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"implementationOf": {
						"type": "reference",
						"id": 186,
						"name": "INodeInterface.hooks"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						242
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						218,
						219,
						221,
						220
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						233,
						238
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						246,
						249
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						224,
						229
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeInterface.ts",
					"line": 6,
					"character": 26
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 173,
					"name": "INodeInterface"
				}
			]
		},
		{
			"id": 273,
			"name": "NodeOption",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 280,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Additional Properties"
					},
					"parameters": [
						{
							"id": 281,
							"name": "k",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"children": [
				{
					"id": 283,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 284,
							"name": "new NodeOption",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 285,
									"name": "optionComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 286,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 287,
									"name": "sidebarComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 273,
								"name": "NodeOption"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeOption.ts",
							"line": 19,
							"character": 24
						}
					]
				},
				{
					"id": 274,
					"name": "optionComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Name of the component that should be displayed for the option"
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeOption.ts",
							"line": 6,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"id": 96,
						"name": "INodeOption.optionComponent"
					}
				},
				{
					"id": 275,
					"name": "sidebarComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Name of the component that should be displayed in the sidebar"
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeOption.ts",
							"line": 8,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"id": 98,
						"name": "INodeOption.sidebarComponent"
					}
				},
				{
					"id": 288,
					"name": "value",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"getSignature": [
						{
							"id": 289,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"setSignature": [
						{
							"id": 290,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 291,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeOption.ts",
							"line": 27,
							"character": 20
						},
						{
							"fileName": "packages/baklavajs-core/src/nodeOption.ts",
							"line": 31,
							"character": 20
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 97,
						"name": "INodeOption.value"
					}
				},
				{
					"id": 276,
					"name": "events",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 277,
							"name": "beforeSetValue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeOption.ts",
									"line": 11,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<any>()"
						},
						{
							"id": 278,
							"name": "setValue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeOption.ts",
									"line": 12,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<any>()"
						},
						{
							"id": 279,
							"name": "updated",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-core/src/nodeOption.ts",
									"line": 13,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<void>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								277,
								278,
								279
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeOption.ts",
							"line": 10,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"implementationOf": {
						"type": "reference",
						"id": 99,
						"name": "INodeOption.events"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						283
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						274,
						275
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						288
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						276
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeOption.ts",
					"line": 4,
					"character": 23
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 93,
					"name": "INodeOption"
				}
			]
		},
		{
			"id": 104,
			"name": "IAddConnectionEventData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 105,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 7,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					}
				},
				{
					"id": 106,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 8,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						105,
						106
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
					"line": 6,
					"character": 40
				}
			]
		},
		{
			"id": 111,
			"name": "IAddInterfaceEventData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 115,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 22,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 113,
					"name": "isInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 112,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 19,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 114,
					"name": "option",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 21,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						115,
						113,
						112,
						114
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
					"line": 18,
					"character": 39
				}
			]
		},
		{
			"id": 107,
			"name": "IAddNodeTypeEventData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 110,
					"name": "category",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 109,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 13,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 91,
						"name": "NodeConstructor"
					}
				},
				{
					"id": 108,
					"name": "typeName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						110,
						109,
						108
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
					"line": 11,
					"character": 38
				}
			]
		},
		{
			"id": 116,
			"name": "IAddOptionEventData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 118,
					"name": "component",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 27,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 119,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 28,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 117,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 26,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 120,
					"name": "sidebarComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 29,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						118,
						119,
						117,
						120
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
					"line": 25,
					"character": 36
				}
			]
		},
		{
			"id": 207,
			"name": "IConnection",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 209,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 19,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					}
				},
				{
					"id": 208,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 18,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 210,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 20,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						209,
						208,
						210
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/connection.ts",
					"line": 17,
					"character": 28
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 211,
					"name": "ITransferConnection"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 265,
					"name": "DummyConnection"
				}
			]
		},
		{
			"id": 20,
			"name": "IConnectionState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 22,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 22,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 21,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 23,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						22,
						21,
						23
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/state.ts",
					"line": 20,
					"character": 33
				}
			],
			"extendedTypes": [
				{
					"type": "reflection",
					"declaration": {
						"id": 24,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"sources": [
							{
								"fileName": "packages/baklavajs-core/types/state.ts",
								"line": 20,
								"character": 41
							}
						]
					}
				}
			]
		},
		{
			"id": 30,
			"name": "IEditor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 51,
					"name": "connections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 35,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 207,
								"name": "IConnection"
							}
						],
						"name": "ReadonlyArray"
					}
				},
				{
					"id": 31,
					"name": "events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 13,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 40,
									"name": "addConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 21,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 207,
												"name": "IConnection"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 36,
									"name": "addNode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 17,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 128,
												"name": "INode"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 39,
									"name": "beforeAddConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 20,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 104,
												"name": "IAddConnectionEventData"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 35,
									"name": "beforeAddNode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 16,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 128,
												"name": "INode"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 33,
									"name": "beforeRegisterNodeType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 14,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 107,
												"name": "IAddNodeTypeEventData"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 42,
									"name": "beforeRemoveConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 23,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 207,
												"name": "IConnection"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 37,
									"name": "beforeRemoveNode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 18,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 128,
												"name": "INode"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 44,
									"name": "beforeUsePlugin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 25,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 25,
												"name": "IPlugin"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 41,
									"name": "checkConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 22,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 104,
												"name": "IAddConnectionEventData"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 34,
									"name": "registerNodeType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 15,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 107,
												"name": "IAddNodeTypeEventData"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 43,
									"name": "removeConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 24,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 207,
												"name": "IConnection"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 38,
									"name": "removeNode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 19,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 128,
												"name": "INode"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 45,
									"name": "usePlugin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 26,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 25,
												"name": "IPlugin"
											}
										],
										"name": "IBaklavaEvent"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										40,
										36,
										39,
										35,
										33,
										42,
										37,
										44,
										41,
										34,
										43,
										38,
										45
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/baklavajs-core/types/editor.ts",
									"line": 13,
									"character": 11
								}
							]
						}
					}
				},
				{
					"id": 46,
					"name": "hooks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 29,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 47,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 49,
									"name": "load",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 31,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 4,
												"name": "IState"
											}
										],
										"name": "IHook"
									}
								},
								{
									"id": 48,
									"name": "save",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/editor.ts",
											"line": 30,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 4,
												"name": "IState"
											}
										],
										"name": "IHook"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										49,
										48
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/baklavajs-core/types/editor.ts",
									"line": 29,
									"character": 10
								}
							]
						}
					}
				},
				{
					"id": 53,
					"name": "nodeCategories",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 37,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "ReadonlyMap"
					}
				},
				{
					"id": 52,
					"name": "nodeTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 36,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 91,
								"name": "NodeConstructor"
							}
						],
						"name": "ReadonlyMap"
					}
				},
				{
					"id": 50,
					"name": "nodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 34,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 128,
								"name": "INode"
							}
						],
						"name": "ReadonlyArray"
					}
				},
				{
					"id": 54,
					"name": "plugins",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 38,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 25,
								"name": "IPlugin"
							}
						],
						"name": "ReadonlySet"
					}
				},
				{
					"id": 66,
					"name": "addConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 67,
							"name": "addConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 68,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 173,
										"name": "INodeInterface"
									}
								},
								{
									"id": 69,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 173,
										"name": "INodeInterface"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 207,
										"name": "IConnection"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 43,
							"character": 17
						}
					]
				},
				{
					"id": 60,
					"name": "addNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 61,
							"name": "addNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 62,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 128,
										"name": "INode"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 128,
										"name": "INode"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 41,
							"character": 11
						}
					]
				},
				{
					"id": 73,
					"name": "checkConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 74,
							"name": "checkConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 75,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 173,
										"name": "INodeInterface"
									}
								},
								{
									"id": 76,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 173,
										"name": "INodeInterface"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "reference",
										"id": 207,
										"name": "IConnection"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 45,
							"character": 19
						}
					]
				},
				{
					"id": 88,
					"name": "findNodeInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 89,
							"name": "findNodeInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 90,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 173,
										"name": "INodeInterface"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 50,
							"character": 21
						}
					]
				},
				{
					"id": 85,
					"name": "generateId",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 86,
							"name": "generateId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 87,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 49,
							"character": 14
						}
					]
				},
				{
					"id": 77,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 78,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 79,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 4,
										"name": "IState"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 46,
							"character": 8
						}
					]
				},
				{
					"id": 55,
					"name": "registerNodeType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 56,
							"name": "registerNodeType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 57,
									"name": "typeName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 91,
										"name": "NodeConstructor"
									}
								},
								{
									"id": 59,
									"name": "category",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 40,
							"character": 20
						}
					]
				},
				{
					"id": 70,
					"name": "removeConnection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 71,
							"name": "removeConnection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 72,
									"name": "connection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 207,
										"name": "IConnection"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 44,
							"character": 20
						}
					]
				},
				{
					"id": 63,
					"name": "removeNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 64,
							"name": "removeNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 65,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 128,
										"name": "INode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 42,
							"character": 14
						}
					]
				},
				{
					"id": 80,
					"name": "save",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 81,
							"name": "save",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 4,
								"name": "IState"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 47,
							"character": 8
						}
					]
				},
				{
					"id": 82,
					"name": "use",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 83,
							"name": "use",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 84,
									"name": "plugin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 25,
										"name": "IPlugin"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 48,
							"character": 7
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						51,
						31,
						46,
						53,
						52,
						50,
						54
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						66,
						60,
						73,
						88,
						85,
						77,
						55,
						70,
						63,
						80,
						82
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/editor.ts",
					"line": 11,
					"character": 24
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 370,
					"name": "Editor"
				}
			]
		},
		{
			"id": 292,
			"name": "IInterfaceCreateOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 294,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 295,
					"name": "optionName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 12,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 293,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/node.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						294,
						295,
						293
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/node.ts",
					"line": 9,
					"character": 40
				}
			]
		},
		{
			"id": 439,
			"name": "IInterfaceOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 444,
					"name": "additionalProperties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 8,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 443,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 7,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 440,
					"name": "isInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 4,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 441,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 5,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 442,
					"name": "option",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 6,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						444,
						443,
						440,
						441,
						442
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
					"line": 3,
					"character": 27
				}
			]
		},
		{
			"id": 16,
			"name": "IInterfaceState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 17,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 16,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 17,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						17,
						18
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/state.ts",
					"line": 15,
					"character": 32
				}
			],
			"extendedTypes": [
				{
					"type": "reflection",
					"declaration": {
						"id": 19,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"sources": [
							{
								"fileName": "packages/baklavajs-core/types/state.ts",
								"line": 15,
								"character": 40
							}
						]
					}
				}
			]
		},
		{
			"id": 128,
			"name": "INode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 135,
					"name": "events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 17,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 136,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 138,
									"name": "addInterface",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 19,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 173,
												"name": "INodeInterface"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 142,
									"name": "addOption",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 23,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 121,
												"name": "IOptionEventData"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 137,
									"name": "beforeAddInterface",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 18,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 111,
												"name": "IAddInterfaceEventData"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 141,
									"name": "beforeAddOption",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 22,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 116,
												"name": "IAddOptionEventData"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 139,
									"name": "beforeRemoveInterface",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 20,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 173,
												"name": "INodeInterface"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 143,
									"name": "beforeRemoveOption",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 24,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 121,
												"name": "IOptionEventData"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 140,
									"name": "removeInterface",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 21,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 173,
												"name": "INodeInterface"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 144,
									"name": "removeOption",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 25,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 121,
												"name": "IOptionEventData"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 145,
									"name": "update",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 26,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 124,
												"name": "INodeUpdateEventData"
											}
										],
										"name": "IBaklavaEvent"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										138,
										142,
										137,
										141,
										139,
										143,
										140,
										144,
										145
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/baklavajs-core/types/node.ts",
									"line": 17,
									"character": 11
								}
							]
						}
					}
				},
				{
					"id": 146,
					"name": "hooks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 29,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 147,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 148,
									"name": "load",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 30,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 8,
												"name": "INodeState"
											}
										],
										"name": "IHook"
									}
								},
								{
									"id": 149,
									"name": "save",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/node.ts",
											"line": 31,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 8,
												"name": "INodeState"
											}
										],
										"name": "IHook"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										148,
										149
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/baklavajs-core/types/node.ts",
									"line": 29,
									"character": 10
								}
							]
						}
					}
				},
				{
					"id": 131,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 12,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 150,
					"name": "inputInterfaces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 34,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 173,
								"name": "INodeInterface"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 132,
					"name": "interfaces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 173,
								"name": "INodeInterface"
							}
						],
						"name": "Map"
					}
				},
				{
					"id": 130,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 133,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 14,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 93,
								"name": "INodeOption"
							}
						],
						"name": "Map"
					}
				},
				{
					"id": 151,
					"name": "outputInterfaces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 35,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 173,
								"name": "INodeInterface"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 134,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 15,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 129,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 157,
					"name": "calculate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 158,
							"name": "calculate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 159,
									"name": "calculationData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 39,
							"character": 13
						}
					]
				},
				{
					"id": 160,
					"name": "getInterface",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 161,
							"name": "getInterface",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 162,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 173,
								"name": "INodeInterface"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 40,
							"character": 16
						}
					]
				},
				{
					"id": 163,
					"name": "getOptionValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 164,
							"name": "getOptionValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 165,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 41,
							"character": 18
						}
					]
				},
				{
					"id": 152,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 153,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 154,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 8,
										"name": "INodeState"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 37,
							"character": 8
						}
					]
				},
				{
					"id": 170,
					"name": "registerEditor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 171,
							"name": "registerEditor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 172,
									"name": "editor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 30,
										"name": "IEditor"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 43,
							"character": 18
						}
					]
				},
				{
					"id": 155,
					"name": "save",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 156,
							"name": "save",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 8,
								"name": "INodeState"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 38,
							"character": 8
						}
					]
				},
				{
					"id": 166,
					"name": "setOptionValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 167,
							"name": "setOptionValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 168,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 169,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/node.ts",
							"line": 42,
							"character": 18
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						135,
						146,
						131,
						150,
						132,
						130,
						133,
						151,
						134,
						129
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						157,
						160,
						163,
						152,
						170,
						155,
						166
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/node.ts",
					"line": 8,
					"character": 22
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 296,
					"name": "Node"
				}
			]
		},
		{
			"id": 173,
			"name": "INodeInterface",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 174,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Additional Properties"
					},
					"parameters": [
						{
							"id": 175,
							"name": "k",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"children": [
				{
					"id": 190,
					"name": "connectionCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 26,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 180,
					"name": "events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 14,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 181,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 183,
									"name": "beforeSetValue",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
											"line": 16,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 182,
									"name": "setConnectionCount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
											"line": 15,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 184,
									"name": "setValue",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
											"line": 17,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 185,
									"name": "updated",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
											"line": 18,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "IBaklavaEvent"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										183,
										182,
										184,
										185
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
									"line": 14,
									"character": 11
								}
							]
						}
					}
				},
				{
					"id": 186,
					"name": "hooks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 21,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 187,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 188,
									"name": "load",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
											"line": 22,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 16,
												"name": "IInterfaceState"
											}
										],
										"name": "IHook"
									}
								},
								{
									"id": 189,
									"name": "save",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
											"line": 23,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 16,
												"name": "IInterfaceState"
											}
										],
										"name": "IHook"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										188,
										189
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
									"line": 21,
									"character": 10
								}
							]
						}
					}
				},
				{
					"id": 176,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 9,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 177,
					"name": "isInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 10,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 179,
					"name": "option",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 12,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 178,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 11,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 128,
						"name": "INode"
					}
				},
				{
					"id": 191,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 192,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 193,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 194,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 16,
										"name": "IInterfaceState"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 29,
							"character": 8
						}
					]
				},
				{
					"id": 195,
					"name": "save",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 196,
							"name": "save",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 16,
								"name": "IInterfaceState"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
							"line": 30,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						190,
						180,
						186,
						176,
						177,
						179,
						178,
						191
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						192,
						195
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/nodeInterface.ts",
					"line": 5,
					"character": 31
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 217,
					"name": "NodeInterface"
				}
			]
		},
		{
			"id": 93,
			"name": "INodeOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"indexSignature": [
				{
					"id": 94,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Additional Properties"
					},
					"parameters": [
						{
							"id": 95,
							"name": "k",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"children": [
				{
					"id": 99,
					"name": "events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeOption.ts",
							"line": 11,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 100,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 101,
									"name": "beforeSetValue",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeOption.ts",
											"line": 12,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "IPreventableBaklavaEvent"
									}
								},
								{
									"id": 102,
									"name": "setValue",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeOption.ts",
											"line": 13,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "IBaklavaEvent"
									}
								},
								{
									"id": 103,
									"name": "updated",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/baklavajs-core/types/nodeOption.ts",
											"line": 14,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "IBaklavaEvent"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										101,
										102,
										103
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/baklavajs-core/types/nodeOption.ts",
									"line": 11,
									"character": 11
								}
							]
						}
					}
				},
				{
					"id": 96,
					"name": "optionComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeOption.ts",
							"line": 7,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 98,
					"name": "sidebarComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeOption.ts",
							"line": 9,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 97,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/nodeOption.ts",
							"line": 8,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						99,
						96,
						98,
						97
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/nodeOption.ts",
					"line": 3,
					"character": 28
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 273,
					"name": "NodeOption"
				}
			]
		},
		{
			"id": 445,
			"name": "INodeOptionParameters",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 449,
					"name": "additionalProperties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 15,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 447,
					"name": "optionComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 13,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 448,
					"name": "sidebarComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 14,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 446,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 12,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						449,
						447,
						448,
						446
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
					"line": 11,
					"character": 31
				}
			]
		},
		{
			"id": 8,
			"name": "INodeState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 11,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 9,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12,
					"name": "interfaces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 10,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 16,
										"name": "IInterfaceState"
									}
								]
							}
						],
						"name": "Array"
					}
				},
				{
					"id": 10,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 8,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 11,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						],
						"name": "Array"
					}
				},
				{
					"id": 14,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 12,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 9,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 7,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						11,
						12,
						10,
						13,
						14,
						9
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/state.ts",
					"line": 6,
					"character": 27
				}
			],
			"extendedTypes": [
				{
					"type": "reflection",
					"declaration": {
						"id": 15,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"sources": [
							{
								"fileName": "packages/baklavajs-core/types/state.ts",
								"line": 6,
								"character": 35
							}
						]
					}
				}
			]
		},
		{
			"id": 124,
			"name": "INodeUpdateEventData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 127,
					"name": "interface",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 40,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					}
				},
				{
					"id": 125,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 38,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 126,
					"name": "option",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 39,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 93,
						"name": "INodeOption"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						127,
						125,
						126
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
					"line": 37,
					"character": 37
				}
			]
		},
		{
			"id": 121,
			"name": "IOptionEventData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 122,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 33,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 123,
					"name": "option",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
							"line": 34,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 93,
						"name": "INodeOption"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						122,
						123
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/eventDataTypes.ts",
					"line": 32,
					"character": 33
				}
			]
		},
		{
			"id": 25,
			"name": "IPlugin",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 26,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/plugin.ts",
							"line": 4,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 27,
					"name": "register",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 28,
							"name": "register",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 29,
									"name": "editor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 30,
										"name": "IEditor"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/plugin.ts",
							"line": 5,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						26
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						27
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/plugin.ts",
					"line": 3,
					"character": 24
				}
			]
		},
		{
			"id": 4,
			"name": "IState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 6,
					"name": "connections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 3,
							"character": 15
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 20,
							"name": "IConnectionState"
						}
					}
				},
				{
					"id": 5,
					"name": "nodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/state.ts",
							"line": 2,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 8,
							"name": "INodeState"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						6,
						5
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/state.ts",
					"line": 1,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reflection",
					"declaration": {
						"id": 7,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"sources": [
							{
								"fileName": "packages/baklavajs-core/types/state.ts",
								"line": 1,
								"character": 31
							}
						]
					}
				}
			]
		},
		{
			"id": 201,
			"name": "ITemporaryConnection",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 203,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					}
				},
				{
					"id": 205,
					"name": "mx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 13,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 206,
					"name": "my",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 14,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 202,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 10,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 197,
						"name": "TemporaryConnectionState"
					}
				},
				{
					"id": 204,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 12,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						203,
						205,
						206,
						202,
						204
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/connection.ts",
					"line": 9,
					"character": 37
				}
			]
		},
		{
			"id": 211,
			"name": "ITransferConnection",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 213,
					"name": "destructed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 25,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 215,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 19,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 209,
						"name": "IConnection.from"
					}
				},
				{
					"id": 214,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 18,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 208,
						"name": "IConnection.id"
					}
				},
				{
					"id": 212,
					"name": "isInDanger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 24,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 216,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/connection.ts",
							"line": 20,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 173,
						"name": "INodeInterface"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 210,
						"name": "IConnection.to"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						213,
						215,
						214,
						212,
						216
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/connection.ts",
					"line": 23,
					"character": 36
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 207,
					"name": "IConnection"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 251,
					"name": "Connection"
				}
			]
		},
		{
			"id": 489,
			"name": "CalculationFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
					"line": 18,
					"character": 24
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 490,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 491,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 492,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 296,
										"name": "Node"
									}
								},
								{
									"id": 493,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 296,
										"name": "Node"
									}
								},
								{
									"id": 494,
									"name": "calculationData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 18,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 91,
			"name": "NodeConstructor",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/baklavajs-core/types/editor.ts",
					"line": 9,
					"character": 27
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 92,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/types/editor.ts",
							"line": 9,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 495,
			"name": "NodeConstructorImpl",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
					"line": 19,
					"character": 24
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 496,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
							"line": 19,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 1,
			"name": "counter",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isLet": true
			},
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/idGenerator.ts",
					"line": 1,
					"character": 11
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": "0"
		},
		{
			"id": 2,
			"name": "generateId",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 3,
					"name": "generateId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/idGenerator.ts",
					"line": 3,
					"character": 34
				}
			]
		},
		{
			"id": 500,
			"name": "generateNode",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 501,
					"name": "generateNode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 502,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 503,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 504,
							"name": "additionalProperties",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 505,
							"name": "intfs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 439,
									"name": "IInterfaceOptions"
								}
							}
						},
						{
							"id": 506,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 445,
										"name": "INodeOptionParameters"
									}
								],
								"name": "Map"
							}
						},
						{
							"id": 507,
							"name": "calcFunction",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 489,
								"name": "CalculationFunction"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "(Anonymous class)"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
					"line": 29,
					"character": 21
				}
			]
		},
		{
			"id": 497,
			"name": "getDefaultValue",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 498,
					"name": "getDefaultValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 499,
							"name": "v",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-core/src/nodeBuilder.ts",
					"line": 21,
					"character": 24
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				197
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				251,
				265,
				370,
				296,
				450,
				217,
				273
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				104,
				111,
				107,
				116,
				207,
				20,
				30,
				292,
				439,
				16,
				128,
				173,
				93,
				445,
				8,
				124,
				121,
				25,
				4,
				201,
				211
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				489,
				91,
				495
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				2,
				500,
				497
			]
		}
	]
}