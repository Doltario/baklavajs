{
	"id": 0,
	"name": "Reference - BaklavaJS",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 24,
			"name": "Engine",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 44,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Construct a new Engine plugin"
					},
					"signatures": [
						{
							"id": 45,
							"name": "new Engine",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Construct a new Engine plugin"
							},
							"parameters": [
								{
									"id": 46,
									"name": "calculateOnChange",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Whether to automatically calculate all nodes when any node interface or node option is changed.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"id": 24,
								"name": "Engine"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 39,
							"character": 62
						}
					]
				},
				{
					"id": 25,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 8,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"EnginePlugin\""
				},
				{
					"id": 26,
					"name": "rootNodes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"getSignature": [
						{
							"id": 27,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "INode"
										}
									}
								]
							}
						}
					],
					"setSignature": [
						{
							"id": 28,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 29,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "INode"
												}
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 10,
							"character": 24
						},
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 14,
							"character": 24
						}
					]
				},
				{
					"id": 50,
					"name": "calculate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 51,
							"name": "calculate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calculate all nodes.\nThis will automatically calculate the node calculation order if necessary and\ntransfer values between connected node interfaces.",
								"returns": "A promise that resolves to either\n- a map that maps rootNodes to their calculated value (what the calculation function of the node returned)\n- null if the calculation was prevented from the beforeCalculate event\n"
							},
							"parameters": [
								{
									"id": 52,
									"name": "calculationData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "INode"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Map"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 108,
							"character": 26
						}
					]
				},
				{
					"id": 53,
					"name": "calculateOrder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 54,
							"name": "calculateOrder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Force the engine to recalculate the node execution order.\nThis is normally done automatically. Use this method if the\ndefault change detection does not work in your scenario."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 147,
							"character": 25
						}
					]
				},
				{
					"id": 47,
					"name": "register",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 48,
							"name": "register",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 49,
									"name": "editor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "IEditor"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 49,
							"character": 19
						}
					]
				},
				{
					"id": 30,
					"name": "events",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 31,
							"name": "beforeCalculate",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This event will be called before all the nodes `calculate` functions are called.\nThe argument is the calculationData that the nodes will receive"
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
									"line": 23,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "PreventableBaklavaEvent"
							},
							"defaultValue": "new PreventableBaklavaEvent<any>()"
						},
						{
							"id": 32,
							"name": "calculated",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
									"line": 24,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "INode"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Map"
									}
								],
								"name": "BaklavaEvent"
							},
							"defaultValue": "new BaklavaEvent<Map<INode, any>>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								31,
								32
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 19,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 33,
					"name": "hooks",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"children": [
						{
							"id": 34,
							"name": "gatherCalculationData",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
									"line": 28,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "SequentialHook"
							},
							"defaultValue": "new SequentialHook<any>()"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								34
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
							"line": 27,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						44
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						25
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						26
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						50,
						53,
						47
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						30,
						33
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-plugin-engine/src/engine.ts",
					"line": 6,
					"character": 19
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "IPlugin"
				}
			]
		},
		{
			"id": 4,
			"name": "IOrderCalculationResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 5,
					"name": "calculationOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
							"line": 9,
							"character": 20
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "INode"
						}
					}
				},
				{
					"id": 6,
					"name": "rootNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
							"line": 10,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "INode"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						5,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
					"line": 8,
					"character": 33
				}
			]
		},
		{
			"id": 1,
			"name": "ITreeNode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
							"line": 5,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1,
							"name": "ITreeNode"
						}
					}
				},
				{
					"id": 2,
					"name": "n",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
							"line": 4,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "INode"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
					"line": 3,
					"character": 19
				}
			]
		},
		{
			"id": 10,
			"name": "calculateOrder",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 11,
					"name": "calculateOrder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 12,
							"name": "nodes",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "INode"
									}
								],
								"name": "ReadonlyArray"
							}
						},
						{
							"id": 13,
							"name": "connections",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IConnection"
									}
								],
								"name": "ReadonlyArray"
							}
						},
						{
							"id": 14,
							"name": "roots",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "INode"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 4,
						"name": "IOrderCalculationResult"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
					"line": 16,
					"character": 30
				}
			]
		},
		{
			"id": 20,
			"name": "containsCycle",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 21,
					"name": "containsCycle",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 22,
							"name": "nodes",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "INode"
									}
								],
								"name": "ReadonlyArray"
							}
						},
						{
							"id": 23,
							"name": "connections",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IConnection"
									}
								],
								"name": "ReadonlyArray"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
					"line": 80,
					"character": 29
				}
			]
		},
		{
			"id": 15,
			"name": "findDescendants",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 16,
					"name": "findDescendants",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 17,
							"name": "tn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "ITreeNode"
							}
						},
						{
							"id": 18,
							"name": "ancestors",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "INode"
								}
							}
						},
						{
							"id": 19,
							"name": "adjacency",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "INode"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "INode"
										}
									}
								],
								"name": "Map"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
					"line": 63,
					"character": 24
				}
			]
		},
		{
			"id": 7,
			"name": "isEmpty",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 8,
					"name": "isEmpty",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 9,
							"name": "obj",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/baklavajs-plugin-engine/src/nodeTreeBuilder.ts",
					"line": 13,
					"character": 13
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				24
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				4,
				1
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				10,
				20,
				15,
				7
			]
		}
	]
}